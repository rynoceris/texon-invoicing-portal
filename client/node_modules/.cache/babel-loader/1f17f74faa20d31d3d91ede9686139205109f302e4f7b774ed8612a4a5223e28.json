{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./EmailSettings.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE='/texon-invoicing-portal/api';const EmailSettings=()=>{const[emailSettings,setEmailSettings]=useState({email_address:'',google_app_password:'',test_mode:true,test_mode_recipient:''});const[currentSettings,setCurrentSettings]=useState(null);const[isLoading,setIsLoading]=useState(false);const[isSaving,setIsSaving]=useState(false);const[message,setMessage]=useState({text:'',type:''});const[showPassword,setShowPassword]=useState(false);useEffect(()=>{loadEmailSettings();},[]);const loadEmailSettings=async()=>{setIsLoading(true);try{const response=await fetch(`${API_BASE}/user/email-settings`,{headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`}});if(response.ok){const data=await response.json();if(data.success){setCurrentSettings(data.settings);setEmailSettings({email_address:data.settings.email_address||'',google_app_password:data.settings.google_app_password||'',// Load the actual password for editing\ntest_mode:data.settings.test_mode!==false,// Default to true if not set\ntest_mode_recipient:data.settings.test_mode_recipient||''});}}else if(response.status===404){// No settings found - this is normal for first-time setup\nconsole.log('No email settings found - ready for initial setup');}else{throw new Error('Failed to load email settings');}}catch(error){console.error('Error loading email settings:',error);setMessage({text:'Error loading email settings',type:'error'});}finally{setIsLoading(false);}};const handleInputChange=(field,value)=>{setEmailSettings(prev=>({...prev,[field]:value}));};const handleTestModeToggle=enabled=>{setEmailSettings(prev=>({...prev,test_mode:enabled,test_mode_recipient:enabled?prev.test_mode_recipient||prev.email_address:''}));};const handleSave=async()=>{if(!emailSettings.email_address||!emailSettings.google_app_password){setMessage({text:'Please fill in email address and Google App Password',type:'error'});return;}if(emailSettings.test_mode&&!emailSettings.test_mode_recipient){setMessage({text:'Please specify a test email recipient or disable test mode',type:'error'});return;}setIsSaving(true);setMessage({text:'',type:''});try{const response=await fetch(`${API_BASE}/user/email-settings`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${localStorage.getItem('token')}`},body:JSON.stringify(emailSettings)});const data=await response.json();if(response.ok&&data.success){setMessage({text:'Email settings saved successfully!',type:'success'});await loadEmailSettings();// Reload to get updated settings\n}else{throw new Error(data.error||'Failed to save email settings');}}catch(error){console.error('Error saving email settings:',error);setMessage({text:`Error: ${error.message}`,type:'error'});}finally{setIsSaving(false);}};const handleTestEmail=async()=>{setIsLoading(true);setMessage({text:'',type:''});try{const response=await fetch(`${API_BASE}/test-email`,{method:'POST',headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`}});const data=await response.json();if(response.ok&&data.success){setMessage({text:`Test email sent successfully to ${emailSettings.test_mode?emailSettings.test_mode_recipient:emailSettings.email_address}!`,type:'success'});}else{throw new Error(data.error||'Failed to send test email');}}catch(error){console.error('Error sending test email:',error);setMessage({text:`Test email failed: ${error.message}`,type:'error'});}finally{setIsLoading(false);}};if(isLoading&&!currentSettings){return/*#__PURE__*/_jsx(\"div\",{className:\"email-settings-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\",children:\"Loading email settings...\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"email-settings-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"email-settings-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCE7 Email Settings\"}),/*#__PURE__*/_jsx(\"p\",{className:\"settings-description\",children:\"Configure your Gmail settings to send invoice and reminder emails directly from your account.\"})]}),message.text&&/*#__PURE__*/_jsx(\"div\",{className:`message ${message.type}`,children:message.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"email-settings-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"settings-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Gmail Configuration\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Gmail Address: *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:emailSettings.email_address,onChange:e=>handleInputChange('email_address',e.target.value),placeholder:\"your.email@gmail.com\",required:true}),/*#__PURE__*/_jsx(\"small\",{children:\"This will be used as the \\\"From\\\" address for all emails\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Google App Password: *\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:showPassword?'text':'password',value:emailSettings.google_app_password,onChange:e=>handleInputChange('google_app_password',e.target.value),placeholder:\"16-character app password\",required:!emailSettings.google_app_password}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"password-toggle\",onClick:()=>setShowPassword(!showPassword),children:showPassword?'üëÅÔ∏è':'üîí'})]}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Generate this in your Google Account \\u2192 Security \\u2192 App Passwords.\",/*#__PURE__*/_jsx(\"a\",{href:\"https://support.google.com/accounts/answer/185833\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"Learn more\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83E\\uDDEA Test Mode\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-mode-controls\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"test-mode-toggle\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"toggle-switch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:emailSettings.test_mode,onChange:e=>handleTestModeToggle(e.target.checked)}),/*#__PURE__*/_jsx(\"span\",{className:\"toggle-slider\"}),/*#__PURE__*/_jsx(\"span\",{className:\"toggle-label\",children:emailSettings.test_mode?'Test Mode Enabled':'Live Mode (sends to customers)'})]})}),emailSettings.test_mode?/*#__PURE__*/_jsxs(\"div\",{className:\"test-mode-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Test Email Recipient: *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:emailSettings.test_mode_recipient,onChange:e=>handleInputChange('test_mode_recipient',e.target.value),placeholder:\"your.test.email@gmail.com\",required:true}),/*#__PURE__*/_jsx(\"small\",{children:\"All emails will be sent to this address instead of customers\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-mode-warning\",children:[\"\\u26A0\\uFE0F \",/*#__PURE__*/_jsx(\"strong\",{children:\"Test Mode is ON:\"}),\" Emails will NOT be sent to customers. They will be redirected to your test email address.\"]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"live-mode-warning\",children:[\"\\uD83D\\uDEA8 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Live Mode is ON:\"}),\" Emails will be sent directly to customers. Make sure your email templates are ready!\"]})]})]}),currentSettings&&/*#__PURE__*/_jsxs(\"div\",{className:\"settings-section current-settings\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Current Settings\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"setting-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"setting-label\",children:\"Email Address:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"setting-value\",children:currentSettings.email_address})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"setting-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"setting-label\",children:\"Password:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"setting-value\",children:currentSettings.google_app_password?'‚úÖ Configured':'‚ùå Not set'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"setting-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"setting-label\",children:\"Mode:\"}),/*#__PURE__*/_jsx(\"span\",{className:`setting-value mode-badge ${currentSettings.test_mode?'test':'live'}`,children:currentSettings.test_mode?'üß™ Test Mode':'üöÄ Live Mode'})]}),currentSettings.test_mode&&currentSettings.test_mode_recipient&&/*#__PURE__*/_jsxs(\"div\",{className:\"setting-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"setting-label\",children:\"Test Recipient:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"setting-value\",children:currentSettings.test_mode_recipient})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"setting-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"setting-label\",children:\"Last Updated:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"setting-value\",children:new Date(currentSettings.updated_at||currentSettings.created_at).toLocaleString()})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn-primary\",onClick:handleSave,disabled:isSaving,children:isSaving?'Saving...':'üíæ Save Email Settings'}),(currentSettings===null||currentSettings===void 0?void 0:currentSettings.google_app_password)&&/*#__PURE__*/_jsx(\"button\",{className:\"btn-secondary\",onClick:handleTestEmail,disabled:isLoading,children:isLoading?'Sending...':'üß™ Send Test Email'})]})]}),!(currentSettings!==null&&currentSettings!==void 0&&currentSettings.google_app_password)&&/*#__PURE__*/_jsxs(\"div\",{className:\"setup-instructions\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCB Setup Instructions\"}),/*#__PURE__*/_jsxs(\"ol\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Enable 2-Factor Authentication\"}),\" on your Gmail account\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Generate App Password:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"Go to your \",/*#__PURE__*/_jsx(\"a\",{href:\"https://myaccount.google.com/security\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"Google Account Security\"})]}),/*#__PURE__*/_jsx(\"li\",{children:\"Under \\\"Signing in to Google\\\", select \\\"App passwords\\\"\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Generate a new app password for \\\"Mail\\\"\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Copy the 16-character password\"})]})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Test Mode:\"}),\" Keep test mode enabled until you're ready to go live\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Send Test Email\"}),\" to verify your configuration works\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Go Live:\"}),\" Disable test mode when ready to send real customer emails\"]})]})]})]});};export default EmailSettings;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","API_BASE","EmailSettings","emailSettings","setEmailSettings","email_address","google_app_password","test_mode","test_mode_recipient","currentSettings","setCurrentSettings","isLoading","setIsLoading","isSaving","setIsSaving","message","setMessage","text","type","showPassword","setShowPassword","loadEmailSettings","response","fetch","headers","localStorage","getItem","ok","data","json","success","settings","status","console","log","Error","error","handleInputChange","field","value","prev","handleTestModeToggle","enabled","handleSave","method","body","JSON","stringify","handleTestEmail","className","children","onChange","e","target","placeholder","required","onClick","href","rel","checked","Date","updated_at","created_at","toLocaleString","disabled"],"sources":["/home/collegesportsdir/public_html/texon-invoicing-portal/client/src/EmailSettings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './EmailSettings.css';\n\nconst API_BASE = '/texon-invoicing-portal/api';\n\nconst EmailSettings = () => {\n    const [emailSettings, setEmailSettings] = useState({\n        email_address: '',\n        google_app_password: '',\n        test_mode: true,\n        test_mode_recipient: ''\n    });\n    \n    const [currentSettings, setCurrentSettings] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isSaving, setIsSaving] = useState(false);\n    const [message, setMessage] = useState({ text: '', type: '' });\n    const [showPassword, setShowPassword] = useState(false);\n\n    useEffect(() => {\n        loadEmailSettings();\n    }, []);\n\n    const loadEmailSettings = async () => {\n        setIsLoading(true);\n        try {\n            const response = await fetch(`${API_BASE}/user/email-settings`, {\n                headers: {\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                if (data.success) {\n                    setCurrentSettings(data.settings);\n                    setEmailSettings({\n                        email_address: data.settings.email_address || '',\n                        google_app_password: data.settings.google_app_password || '', // Load the actual password for editing\n                        test_mode: data.settings.test_mode !== false, // Default to true if not set\n                        test_mode_recipient: data.settings.test_mode_recipient || ''\n                    });\n                }\n            } else if (response.status === 404) {\n                // No settings found - this is normal for first-time setup\n                console.log('No email settings found - ready for initial setup');\n            } else {\n                throw new Error('Failed to load email settings');\n            }\n        } catch (error) {\n            console.error('Error loading email settings:', error);\n            setMessage({ text: 'Error loading email settings', type: 'error' });\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleInputChange = (field, value) => {\n        setEmailSettings(prev => ({\n            ...prev,\n            [field]: value\n        }));\n    };\n\n    const handleTestModeToggle = (enabled) => {\n        setEmailSettings(prev => ({\n            ...prev,\n            test_mode: enabled,\n            test_mode_recipient: enabled ? (prev.test_mode_recipient || prev.email_address) : ''\n        }));\n    };\n\n    const handleSave = async () => {\n        if (!emailSettings.email_address || !emailSettings.google_app_password) {\n            setMessage({ text: 'Please fill in email address and Google App Password', type: 'error' });\n            return;\n        }\n\n        if (emailSettings.test_mode && !emailSettings.test_mode_recipient) {\n            setMessage({ text: 'Please specify a test email recipient or disable test mode', type: 'error' });\n            return;\n        }\n\n        setIsSaving(true);\n        setMessage({ text: '', type: '' });\n\n        try {\n            const response = await fetch(`${API_BASE}/user/email-settings`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                },\n                body: JSON.stringify(emailSettings)\n            });\n\n            const data = await response.json();\n            \n            if (response.ok && data.success) {\n                setMessage({ text: 'Email settings saved successfully!', type: 'success' });\n                await loadEmailSettings(); // Reload to get updated settings\n            } else {\n                throw new Error(data.error || 'Failed to save email settings');\n            }\n        } catch (error) {\n            console.error('Error saving email settings:', error);\n            setMessage({ text: `Error: ${error.message}`, type: 'error' });\n        } finally {\n            setIsSaving(false);\n        }\n    };\n\n    const handleTestEmail = async () => {\n        setIsLoading(true);\n        setMessage({ text: '', type: '' });\n\n        try {\n            const response = await fetch(`${API_BASE}/test-email`, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            });\n\n            const data = await response.json();\n            \n            if (response.ok && data.success) {\n                setMessage({ text: `Test email sent successfully to ${emailSettings.test_mode ? emailSettings.test_mode_recipient : emailSettings.email_address}!`, type: 'success' });\n            } else {\n                throw new Error(data.error || 'Failed to send test email');\n            }\n        } catch (error) {\n            console.error('Error sending test email:', error);\n            setMessage({ text: `Test email failed: ${error.message}`, type: 'error' });\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    if (isLoading && !currentSettings) {\n        return (\n            <div className=\"email-settings-container\">\n                <div className=\"loading-spinner\">Loading email settings...</div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"email-settings-container\">\n            <div className=\"email-settings-header\">\n                <h2>üìß Email Settings</h2>\n                <p className=\"settings-description\">\n                    Configure your Gmail settings to send invoice and reminder emails directly from your account.\n                </p>\n            </div>\n\n            {message.text && (\n                <div className={`message ${message.type}`}>\n                    {message.text}\n                </div>\n            )}\n\n            <div className=\"email-settings-form\">\n                {/* Gmail Configuration Section */}\n                <div className=\"settings-section\">\n                    <h3>Gmail Configuration</h3>\n                    <div className=\"form-group\">\n                        <label>Gmail Address: *</label>\n                        <input\n                            type=\"email\"\n                            value={emailSettings.email_address}\n                            onChange={(e) => handleInputChange('email_address', e.target.value)}\n                            placeholder=\"your.email@gmail.com\"\n                            required\n                        />\n                        <small>This will be used as the \"From\" address for all emails</small>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Google App Password: *</label>\n                        <div className=\"password-input-group\">\n                            <input\n                                type={showPassword ? 'text' : 'password'}\n                                value={emailSettings.google_app_password}\n                                onChange={(e) => handleInputChange('google_app_password', e.target.value)}\n                                placeholder=\"16-character app password\"\n                                required={!emailSettings.google_app_password}\n                            />\n                            <button \n                                type=\"button\" \n                                className=\"password-toggle\"\n                                onClick={() => setShowPassword(!showPassword)}\n                            >\n                                {showPassword ? 'üëÅÔ∏è' : 'üîí'}\n                            </button>\n                        </div>\n                        <small>\n                            Generate this in your Google Account ‚Üí Security ‚Üí App Passwords. \n                            <a href=\"https://support.google.com/accounts/answer/185833\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                Learn more\n                            </a>\n                        </small>\n                    </div>\n                </div>\n\n                {/* Test Mode Section */}\n                <div className=\"settings-section\">\n                    <h3>üß™ Test Mode</h3>\n                    <div className=\"test-mode-controls\">\n                        <div className=\"test-mode-toggle\">\n                            <label className=\"toggle-switch\">\n                                <input\n                                    type=\"checkbox\"\n                                    checked={emailSettings.test_mode}\n                                    onChange={(e) => handleTestModeToggle(e.target.checked)}\n                                />\n                                <span className=\"toggle-slider\"></span>\n                                <span className=\"toggle-label\">\n                                    {emailSettings.test_mode ? 'Test Mode Enabled' : 'Live Mode (sends to customers)'}\n                                </span>\n                            </label>\n                        </div>\n\n                        {emailSettings.test_mode ? (\n                            <div className=\"test-mode-info\">\n                                <div className=\"form-group\">\n                                    <label>Test Email Recipient: *</label>\n                                    <input\n                                        type=\"email\"\n                                        value={emailSettings.test_mode_recipient}\n                                        onChange={(e) => handleInputChange('test_mode_recipient', e.target.value)}\n                                        placeholder=\"your.test.email@gmail.com\"\n                                        required\n                                    />\n                                    <small>All emails will be sent to this address instead of customers</small>\n                                </div>\n                                <div className=\"test-mode-warning\">\n                                    ‚ö†Ô∏è <strong>Test Mode is ON:</strong> Emails will NOT be sent to customers. \n                                    They will be redirected to your test email address.\n                                </div>\n                            </div>\n                        ) : (\n                            <div className=\"live-mode-warning\">\n                                üö® <strong>Live Mode is ON:</strong> Emails will be sent directly to customers. \n                                Make sure your email templates are ready!\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                {/* Current Settings Display */}\n                {currentSettings && (\n                    <div className=\"settings-section current-settings\">\n                        <h3>Current Settings</h3>\n                        <div className=\"settings-summary\">\n                            <div className=\"setting-item\">\n                                <span className=\"setting-label\">Email Address:</span>\n                                <span className=\"setting-value\">{currentSettings.email_address}</span>\n                            </div>\n                            <div className=\"setting-item\">\n                                <span className=\"setting-label\">Password:</span>\n                                <span className=\"setting-value\">\n                                    {currentSettings.google_app_password ? '‚úÖ Configured' : '‚ùå Not set'}\n                                </span>\n                            </div>\n                            <div className=\"setting-item\">\n                                <span className=\"setting-label\">Mode:</span>\n                                <span className={`setting-value mode-badge ${currentSettings.test_mode ? 'test' : 'live'}`}>\n                                    {currentSettings.test_mode ? 'üß™ Test Mode' : 'üöÄ Live Mode'}\n                                </span>\n                            </div>\n                            {currentSettings.test_mode && currentSettings.test_mode_recipient && (\n                                <div className=\"setting-item\">\n                                    <span className=\"setting-label\">Test Recipient:</span>\n                                    <span className=\"setting-value\">{currentSettings.test_mode_recipient}</span>\n                                </div>\n                            )}\n                            <div className=\"setting-item\">\n                                <span className=\"setting-label\">Last Updated:</span>\n                                <span className=\"setting-value\">\n                                    {new Date(currentSettings.updated_at || currentSettings.created_at).toLocaleString()}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {/* Action Buttons */}\n                <div className=\"settings-actions\">\n                    <button \n                        className=\"btn-primary\"\n                        onClick={handleSave}\n                        disabled={isSaving}\n                    >\n                        {isSaving ? 'Saving...' : 'üíæ Save Email Settings'}\n                    </button>\n                    \n                    {currentSettings?.google_app_password && (\n                        <button \n                            className=\"btn-secondary\"\n                            onClick={handleTestEmail}\n                            disabled={isLoading}\n                        >\n                            {isLoading ? 'Sending...' : 'üß™ Send Test Email'}\n                        </button>\n                    )}\n                </div>\n            </div>\n\n            {/* Setup Instructions - Only show if email not configured */}\n            {!currentSettings?.google_app_password && (\n                <div className=\"setup-instructions\">\n                <h3>üìã Setup Instructions</h3>\n                <ol>\n                    <li><strong>Enable 2-Factor Authentication</strong> on your Gmail account</li>\n                    <li><strong>Generate App Password:</strong>\n                        <ul>\n                            <li>Go to your <a href=\"https://myaccount.google.com/security\" target=\"_blank\" rel=\"noopener noreferrer\">Google Account Security</a></li>\n                            <li>Under \"Signing in to Google\", select \"App passwords\"</li>\n                            <li>Generate a new app password for \"Mail\"</li>\n                            <li>Copy the 16-character password</li>\n                        </ul>\n                    </li>\n                    <li><strong>Test Mode:</strong> Keep test mode enabled until you're ready to go live</li>\n                    <li><strong>Send Test Email</strong> to verify your configuration works</li>\n                    <li><strong>Go Live:</strong> Disable test mode when ready to send real customer emails</li>\n                </ol>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default EmailSettings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}