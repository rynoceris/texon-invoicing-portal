{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./EmailModal.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const API_BASE='/texon-invoicing-portal/api';const EmailModal=_ref=>{var _orderData$billingadd;let{isOpen,invoice,emailType,onClose,onSend,token}=_ref;const[emailData,setEmailData]=useState({to:'',subject:'',body:'',emailType:emailType});const[isLoading,setIsLoading]=useState(false);const[lastSent,setLastSent]=useState(null);const[emailHistory,setEmailHistory]=useState([]);const orderData=invoice||{};// Debug logging to see what data we're receiving\nuseEffect(()=>{if(isOpen){console.log('EmailModal orderData:',orderData);}},[isOpen,orderData]);useEffect(()=>{if(isOpen&&orderData.id){loadEmailTemplate();loadLastSentInfo();}},[isOpen,orderData,emailType]);const loadEmailTemplate=async()=>{// Get recipient email\nconst recipientEmail=orderData.billingemail||orderData.deliveryemail||'';try{// Get template from backend\nconst response=await fetch(`${API_BASE}/email-template/${emailType}`,{headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`}});if(response.ok){const template=await response.json();// Replace template variables\nconst templateVars={ORDER_ID:orderData.id,CUSTOMER_NAME:orderData.billingaddressfullname||orderData.customerName||'Valued Customer',COMPANY_NAME:'Texon Towel',ORDER_REFERENCE:orderData.reference||'',INVOICE_NUMBER:orderData.invoiceNumber||'',TOTAL_AMOUNT:orderData.total?`$${orderData.total}`:'',DAYS_OUTSTANDING:orderData.daysOutstanding||'',PAYMENT_LINK:orderData.paymentLink||''};const subject=replaceTemplateVars(template.subject_template,templateVars);const body=replaceTemplateVars(template.body_template,templateVars);setEmailData({to:recipientEmail,subject:subject,body:body,emailType:emailType});}else{// Fallback default template\nsetDefaultTemplate(recipientEmail);}}catch(error){console.error('Error loading email template:',error);setDefaultTemplate(recipientEmail);}};const setDefaultTemplate=recipientEmail=>{const isReminder=emailType==='reminder';setEmailData({to:recipientEmail,subject:isReminder?`Payment Reminder - Order #${orderData.id}`:`Invoice - Order #${orderData.id}`,body:isReminder?`Dear ${orderData.billingaddressfullname||'Valued Customer'},\\n\\nThis is a friendly reminder that payment is due for Order #${orderData.id}.\\n\\nOrder Total: $${orderData.total||orderData.totalvalue||'0.00'}\\nOrder Date: ${new Date(orderData.placedon).toLocaleDateString()}\\n\\nPlease submit payment at your earliest convenience.\\n\\nBest regards,\\nTexon Towel`:`Dear ${orderData.billingaddressfullname||'Valued Customer'},\\n\\nThank you for your order. Please find your invoice attached.\\n\\nOrder #: ${orderData.id}\\nTotal Amount: $${orderData.total||orderData.totalvalue||'0.00'}\\n\\nBest regards,\\nTexon Towel`,emailType:emailType});};const replaceTemplateVars=(template,variables)=>{let result=template||'';for(const[key,value]of Object.entries(variables)){const placeholder=`{${key}}`;result=result.replace(new RegExp(placeholder,'g'),value||'');}return result;};const loadLastSentInfo=async()=>{try{const response=await fetch(`${API_BASE}/email-logs/order/${orderData.id}`,{headers:{'Authorization':`Bearer ${token}`}});if(response.ok){const logs=await response.json();if(logs&&logs.length>0){// Find the most recent email of this type\nconst recentEmail=logs.find(log=>log.email_type===emailType);if(recentEmail){setLastSent({date:new Date(recentEmail.created_at).toLocaleString(),status:recentEmail.send_status,recipient:recentEmail.recipient_email});}setEmailHistory(logs.filter(log=>log.email_type===emailType).slice(0,5));}}}catch(error){console.error('Error loading email history:',error);}};const handleSend=async()=>{if(!emailData.to||!emailData.subject||!emailData.body){alert('Please fill in all required fields.');return;}setIsLoading(true);try{const success=await onSend({orderId:orderData.id,to:emailData.to,subject:emailData.subject,body:emailData.body,emailType:emailType});if(success){onClose();}}catch(error){console.error('Error sending email:',error);alert('Failed to send email: '+error.message);}finally{setIsLoading(false);}};const handleInputChange=(field,value)=>{setEmailData(prev=>({...prev,[field]:value}));};if(!isOpen)return null;const isReminder=emailType==='reminder';return/*#__PURE__*/_jsx(\"div\",{className:\"email-modal-overlay\",onClick:onClose,children:/*#__PURE__*/_jsxs(\"div\",{className:\"email-modal\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"email-modal-header\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[isReminder?'‚ö†Ô∏è Send Payment Reminder':'üìß Send Invoice',\" - Order #\",orderData.id]}),/*#__PURE__*/_jsx(\"button\",{className:\"email-modal-close\",onClick:onClose,children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"email-modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"order-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Order Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"order-details\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Customer:\"}),\" \",orderData.billingaddressfullname||orderData.customerName||orderData.customer_name||((_orderData$billingadd=orderData.billingaddress)===null||_orderData$billingadd===void 0?void 0:_orderData$billingadd.fullname)||'N/A']}),/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Amount:\"}),\" $\",orderData.total||orderData.totalvalue||orderData.totalValue||orderData.amount||'0.00']}),/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date:\"}),\" \",orderData.placedon?new Date(orderData.placedon).toLocaleDateString():orderData.placed_on?new Date(orderData.placed_on).toLocaleDateString():orderData.date?new Date(orderData.date).toLocaleDateString():'Invalid Date']}),/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Days Outstanding:\"}),\" \",orderData.daysOutstanding||orderData.days_outstanding||orderData.outstanding_days||'N/A']})]})]}),lastSent&&/*#__PURE__*/_jsxs(\"div\",{className:\"last-sent-info\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Last \",isReminder?'Reminder':'Invoice',\" Sent\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date:\"}),\" \",lastSent.date,\" |\",/*#__PURE__*/_jsx(\"strong\",{children:\" Status:\"}),\" \",lastSent.status,\" |\",/*#__PURE__*/_jsx(\"strong\",{children:\" To:\"}),\" \",lastSent.recipient]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"email-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"To: *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:emailData.to,onChange:e=>handleInputChange('to',e.target.value),placeholder:\"customer@example.com\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Subject: *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:emailData.subject,onChange:e=>handleInputChange('subject',e.target.value),placeholder:\"Email subject...\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Message: *\"}),/*#__PURE__*/_jsx(\"textarea\",{value:emailData.body,onChange:e=>handleInputChange('body',e.target.value),placeholder:\"Email message...\",rows:\"8\",required:true})]})]}),emailHistory.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"email-history\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Recent \",isReminder?'Reminders':'Invoices']}),/*#__PURE__*/_jsx(\"div\",{className:\"history-list\",children:emailHistory.map((log,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"history-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"history-date\",children:new Date(log.created_at).toLocaleDateString()}),/*#__PURE__*/_jsx(\"span\",{className:`history-status ${log.send_status}`,children:log.send_status}),/*#__PURE__*/_jsx(\"span\",{className:\"history-recipient\",children:log.recipient_email})]},index))})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"email-modal-footer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn-secondary\",onClick:onClose,disabled:isLoading,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-primary\",onClick:handleSend,disabled:isLoading||!emailData.to||!emailData.subject||!emailData.body,children:isLoading?isReminder?'Sending Reminder...':'Sending Invoice...':isReminder?'‚ö†Ô∏è Send Reminder':'üìß Send Invoice'})]})})]})});};export default EmailModal;","map":{"version":3,"names":["React","useState","useEffect","jsxs","_jsxs","jsx","_jsx","API_BASE","EmailModal","_ref","_orderData$billingadd","isOpen","invoice","emailType","onClose","onSend","token","emailData","setEmailData","to","subject","body","isLoading","setIsLoading","lastSent","setLastSent","emailHistory","setEmailHistory","orderData","console","log","id","loadEmailTemplate","loadLastSentInfo","recipientEmail","billingemail","deliveryemail","response","fetch","headers","localStorage","getItem","ok","template","json","templateVars","ORDER_ID","CUSTOMER_NAME","billingaddressfullname","customerName","COMPANY_NAME","ORDER_REFERENCE","reference","INVOICE_NUMBER","invoiceNumber","TOTAL_AMOUNT","total","DAYS_OUTSTANDING","daysOutstanding","PAYMENT_LINK","paymentLink","replaceTemplateVars","subject_template","body_template","setDefaultTemplate","error","isReminder","totalvalue","Date","placedon","toLocaleDateString","variables","result","key","value","Object","entries","placeholder","replace","RegExp","logs","length","recentEmail","find","email_type","date","created_at","toLocaleString","status","send_status","recipient","recipient_email","filter","slice","handleSend","alert","success","orderId","message","handleInputChange","field","prev","className","onClick","children","e","stopPropagation","customer_name","billingaddress","fullname","totalValue","amount","placed_on","days_outstanding","outstanding_days","type","onChange","target","required","rows","map","index","disabled"],"sources":["/home/collegesportsdir/public_html/texon-invoicing-portal/client/src/EmailModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './EmailModal.css';\n\nconst API_BASE = '/texon-invoicing-portal/api';\n\nconst EmailModal = ({ isOpen, invoice, emailType, onClose, onSend, token }) => {\n    const [emailData, setEmailData] = useState({\n        to: '',\n        subject: '',\n        body: '',\n        emailType: emailType\n    });\n    const [isLoading, setIsLoading] = useState(false);\n    const [lastSent, setLastSent] = useState(null);\n    const [emailHistory, setEmailHistory] = useState([]);\n    \n    const orderData = invoice || {};\n    \n    // Debug logging to see what data we're receiving\n    useEffect(() => {\n        if (isOpen) {\n            console.log('EmailModal orderData:', orderData);\n        }\n    }, [isOpen, orderData]);\n    \n    useEffect(() => {\n        if (isOpen && orderData.id) {\n            loadEmailTemplate();\n            loadLastSentInfo();\n        }\n    }, [isOpen, orderData, emailType]);\n\n    const loadEmailTemplate = async () => {\n        // Get recipient email\n        const recipientEmail = orderData.billingemail || orderData.deliveryemail || '';\n        \n        try {\n            // Get template from backend\n            const response = await fetch(`${API_BASE}/email-template/${emailType}`, {\n                headers: {\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            });\n            \n            if (response.ok) {\n                const template = await response.json();\n                \n                // Replace template variables\n                const templateVars = {\n                    ORDER_ID: orderData.id,\n                    CUSTOMER_NAME: orderData.billingaddressfullname || orderData.customerName || 'Valued Customer',\n                    COMPANY_NAME: 'Texon Towel',\n                    ORDER_REFERENCE: orderData.reference || '',\n                    INVOICE_NUMBER: orderData.invoiceNumber || '',\n                    TOTAL_AMOUNT: orderData.total ? `$${orderData.total}` : '',\n                    DAYS_OUTSTANDING: orderData.daysOutstanding || '',\n                    PAYMENT_LINK: orderData.paymentLink || ''\n                };\n\n                const subject = replaceTemplateVars(template.subject_template, templateVars);\n                const body = replaceTemplateVars(template.body_template, templateVars);\n\n                setEmailData({\n                    to: recipientEmail,\n                    subject: subject,\n                    body: body,\n                    emailType: emailType\n                });\n            } else {\n                // Fallback default template\n                setDefaultTemplate(recipientEmail);\n            }\n        } catch (error) {\n            console.error('Error loading email template:', error);\n            setDefaultTemplate(recipientEmail);\n        }\n    };\n\n    const setDefaultTemplate = (recipientEmail) => {\n        const isReminder = emailType === 'reminder';\n        \n        setEmailData({\n            to: recipientEmail,\n            subject: isReminder \n                ? `Payment Reminder - Order #${orderData.id}` \n                : `Invoice - Order #${orderData.id}`,\n            body: isReminder \n                ? `Dear ${orderData.billingaddressfullname || 'Valued Customer'},\\n\\nThis is a friendly reminder that payment is due for Order #${orderData.id}.\\n\\nOrder Total: $${orderData.total || orderData.totalvalue || '0.00'}\\nOrder Date: ${new Date(orderData.placedon).toLocaleDateString()}\\n\\nPlease submit payment at your earliest convenience.\\n\\nBest regards,\\nTexon Towel` \n                : `Dear ${orderData.billingaddressfullname || 'Valued Customer'},\\n\\nThank you for your order. Please find your invoice attached.\\n\\nOrder #: ${orderData.id}\\nTotal Amount: $${orderData.total || orderData.totalvalue || '0.00'}\\n\\nBest regards,\\nTexon Towel`,\n            emailType: emailType\n        });\n    };\n\n    const replaceTemplateVars = (template, variables) => {\n        let result = template || '';\n        for (const [key, value] of Object.entries(variables)) {\n            const placeholder = `{${key}}`;\n            result = result.replace(new RegExp(placeholder, 'g'), value || '');\n        }\n        return result;\n    };\n\n    const loadLastSentInfo = async () => {\n        try {\n            const response = await fetch(`${API_BASE}/email-logs/order/${orderData.id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n            \n            if (response.ok) {\n                const logs = await response.json();\n                if (logs && logs.length > 0) {\n                    // Find the most recent email of this type\n                    const recentEmail = logs.find(log => log.email_type === emailType);\n                    if (recentEmail) {\n                        setLastSent({\n                            date: new Date(recentEmail.created_at).toLocaleString(),\n                            status: recentEmail.send_status,\n                            recipient: recentEmail.recipient_email\n                        });\n                    }\n                    setEmailHistory(logs.filter(log => log.email_type === emailType).slice(0, 5));\n                }\n            }\n        } catch (error) {\n            console.error('Error loading email history:', error);\n        }\n    };\n\n    const handleSend = async () => {\n        if (!emailData.to || !emailData.subject || !emailData.body) {\n            alert('Please fill in all required fields.');\n            return;\n        }\n\n        setIsLoading(true);\n        \n        try {\n            const success = await onSend({\n                orderId: orderData.id,\n                to: emailData.to,\n                subject: emailData.subject,\n                body: emailData.body,\n                emailType: emailType\n            });\n            \n            if (success) {\n                onClose();\n            }\n        } catch (error) {\n            console.error('Error sending email:', error);\n            alert('Failed to send email: ' + error.message);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleInputChange = (field, value) => {\n        setEmailData(prev => ({\n            ...prev,\n            [field]: value\n        }));\n    };\n\n    if (!isOpen) return null;\n\n    const isReminder = emailType === 'reminder';\n\n    return (\n        <div className=\"email-modal-overlay\" onClick={onClose}>\n            <div className=\"email-modal\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"email-modal-header\">\n                    <h2>\n                        {isReminder ? '‚ö†Ô∏è Send Payment Reminder' : 'üìß Send Invoice'} - Order #{orderData.id}\n                    </h2>\n                    <button className=\"email-modal-close\" onClick={onClose}>√ó</button>\n                </div>\n                \n                <div className=\"email-modal-content\">\n                    {/* Order Info */}\n                    <div className=\"order-info\">\n                        <h4>Order Details</h4>\n                        <div className=\"order-details\">\n                            <span><strong>Customer:</strong> {\n                                orderData.billingaddressfullname || \n                                orderData.customerName || \n                                orderData.customer_name || \n                                orderData.billingaddress?.fullname || \n                                'N/A'\n                            }</span>\n                            <span><strong>Amount:</strong> ${\n                                orderData.total || \n                                orderData.totalvalue || \n                                orderData.totalValue || \n                                orderData.amount ||\n                                '0.00'\n                            }</span>\n                            <span><strong>Date:</strong> {\n                                orderData.placedon ? \n                                    new Date(orderData.placedon).toLocaleDateString() :\n                                orderData.placed_on ? \n                                    new Date(orderData.placed_on).toLocaleDateString() :\n                                orderData.date ? \n                                    new Date(orderData.date).toLocaleDateString() :\n                                    'Invalid Date'\n                            }</span>\n                            <span><strong>Days Outstanding:</strong> {\n                                orderData.daysOutstanding || \n                                orderData.days_outstanding || \n                                orderData.outstanding_days || \n                                'N/A'\n                            }</span>\n                        </div>\n                    </div>\n\n                    {/* Last Sent Info */}\n                    {lastSent && (\n                        <div className=\"last-sent-info\">\n                            <h4>Last {isReminder ? 'Reminder' : 'Invoice'} Sent</h4>\n                            <p>\n                                <strong>Date:</strong> {lastSent.date} | \n                                <strong> Status:</strong> {lastSent.status} | \n                                <strong> To:</strong> {lastSent.recipient}\n                            </p>\n                        </div>\n                    )}\n\n                    {/* Email Form */}\n                    <div className=\"email-form\">\n                        <div className=\"form-group\">\n                            <label>To: *</label>\n                            <input\n                                type=\"email\"\n                                value={emailData.to}\n                                onChange={(e) => handleInputChange('to', e.target.value)}\n                                placeholder=\"customer@example.com\"\n                                required\n                            />\n                        </div>\n                        \n                        <div className=\"form-group\">\n                            <label>Subject: *</label>\n                            <input\n                                type=\"text\"\n                                value={emailData.subject}\n                                onChange={(e) => handleInputChange('subject', e.target.value)}\n                                placeholder=\"Email subject...\"\n                                required\n                            />\n                        </div>\n                        \n                        <div className=\"form-group\">\n                            <label>Message: *</label>\n                            <textarea\n                                value={emailData.body}\n                                onChange={(e) => handleInputChange('body', e.target.value)}\n                                placeholder=\"Email message...\"\n                                rows=\"8\"\n                                required\n                            />\n                        </div>\n                    </div>\n\n                    {/* Email History */}\n                    {emailHistory.length > 0 && (\n                        <div className=\"email-history\">\n                            <h4>Recent {isReminder ? 'Reminders' : 'Invoices'}</h4>\n                            <div className=\"history-list\">\n                                {emailHistory.map((log, index) => (\n                                    <div key={index} className=\"history-item\">\n                                        <span className=\"history-date\">\n                                            {new Date(log.created_at).toLocaleDateString()}\n                                        </span>\n                                        <span className={`history-status ${log.send_status}`}>\n                                            {log.send_status}\n                                        </span>\n                                        <span className=\"history-recipient\">\n                                            {log.recipient_email}\n                                        </span>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    )}\n                </div>\n                \n                <div className=\"email-modal-footer\">\n                    <div className=\"modal-buttons\">\n                        <button\n                            className=\"btn-secondary\"\n                            onClick={onClose}\n                            disabled={isLoading}\n                        >\n                            Cancel\n                        </button>\n                        <button\n                            className=\"btn-primary\"\n                            onClick={handleSend}\n                            disabled={isLoading || !emailData.to || !emailData.subject || !emailData.body}\n                        >\n                            {isLoading \n                                ? (isReminder ? 'Sending Reminder...' : 'Sending Invoice...') \n                                : (isReminder ? '‚ö†Ô∏è Send Reminder' : 'üìß Send Invoice')\n                            }\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EmailModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}